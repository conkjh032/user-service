server:
  # port: 0은 랜덤 포트 설정
  port: 0

spring:
  application:
    name: user-service
  zipkin:
    base-url: http://127.0.0.1:9411
    enabled: true
  sleuth:
    sampler:
      probability: 1.0 # 로그를 몇 퍼센트 전달할 것인가
  rabbitmq:
    host: 127.0.0.1
    port: 5672
    username: guest
    password: guest
  h2:
    console:
      enabled: true
      settings:
        web-allow-others: true
      path: /h2-console
#  datasource: # config server의 user-service.yml에 넣어서 관리
#    driver-class-name: org.h2.Driver
#    url: jdbc:h2:mem:testdb


eureka:
  # ${spring.cloud.client.hostname} : hostname 출력
  # ${spring.application.instance_id:${random.value}} : instance-id와 랜덤 포트 출력
  instance:
    instance-id: ${spring.cloud.client.hostname}:${spring.application.instance_id:${random.value}}
    hostname: localhost

  client:
    register-with-eureka: true
    # fetch-registry : Eureka 서버로부터 인스턴스들의 정보를 주기적으로 가져오는 설정
    fetch-registry: true
    # defaultZone : 디스커버리 서버 위치
    service-url:
      defaultZone: http://localhost:8761/eureka

#설정을 자유롭게 추가하여 java 파일에서 가져다 쓸 수 있다.
greeting:
  message: Welcome to the Simple E-commerce.


logging:
  level:
    com.example.userservice.client: DEBUG # feign client가 있는 패키지를 debug로 설정


#token:
#  expiration_time: 8400000 # 1분 유효
#  secret: user_token # 토큰화할 때 사용할 키

# Actuator 설정
management:
  endpoints:
    web:
      exposure:
        include: refresh, health, beans, busrefresh, info, prometheus, metrics
